# Add git branch if its present to PS1
#parse_git_branch() {
#    git branch 2> /dev/null | sed -e '/^[^]/d' -e 's/ \(.*\)/ (\1)/'
#}
#export PS1="\u@\h \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

# Npm 
alias serve='npm run serve'

# Vapor 
alias vapor='php vendor/bin/vapor'

# Server Mainainece
# Ducks  get file sizes
alias ducks='du -cks * | sort -rn | head'

# Git Aliases
alias gs='git status -sb'
alias pull='git pull'
alias push='git push'
alias commit='git add -A; git commit -am "'
alias log="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gitclear='git add -A; git stash'
alias cleanorigin="git remote update origin --prune"
alias cleanlocal='git branch | grep -v "master" | xargs git branch -D'
alias cleangit='cleanorigin; cleanlocal'

alias fetch='git fetch'
alias master='git checkout master; fetch; pull; migrate'
alias feature='dev'
alias dev='git checkout dev; fetch; pull; migrate'
alias updatedev='dev; mergeMaster; push'

function gittrash() {
	branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
	git checkout -b trash-branch
	commit trash"
	git checkout $branch
	git branch -D trash-branch
}
function pushup() {
	branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
	git push --set-upstream origin $branch
}
function mergeMaster() {
	branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
	echo $branch
	master
	git checkout $branch
	git merge master
}
function merge() {
	branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
	git checkout $1
	git fetch
	git pull
	git checkout $branch
	git merge $1
}

function pulldown() {
	master
	git checkout $1
	branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
	git checkout -b ${branch}-shawn
	mergeMaster
	gs
}

function pulldotfiles() {
	CWD=$(pwd)
	dotfiles
	pull
}

function savedotfiles() {
	CWD=$(pwd)
	dotfiles
	commit saving changes to dot-files"
	push
	cd $CWD
}
